/*
 * SRF01.cpp
 *
 *  Created on: Apr 3, 2012
 *      Author: imaveek
 */

#include "SRF01.h"
#include "Arduino.h"

#define SRF_TXRX         26   	// Defines pin to be used as RX and TX for SRF01
#define SRF_ADDRESS      0x01   // Address of the SFR01
#define GETSOFT          0x5D   // Byte to tell SRF01 we wish to read software version
#define GETRANGE         0x54   // Byte used to get range from SRF01
#define GETSTATUS        0x5F   // Byte used to get the status of the transducer


SRF01::SRF01() {
	// TODO Auto-generated constructor stub

}

void SRF01::start() {

	Serial1.end();

	pinMode(SRF_TXRX,OUTPUT);
	// Sets up software serial port for the SRF01
	srf01 = new SoftwareSerial(SRF_TXRX, SRF_TXRX);
	srf01->begin(9600);
	srf01->listen();   // Make sure that the SRF01 software serial port is listening for data as only one software serial port can listen at a time
	delay(200);       // Waits some time to make sure everything is powered up
}

uint16_t SRF01::value() {
	return 0;
}

void SRF01::end() {
	delete srf01;
	Serial1.begin(9600);
}

SRF01::~SRF01() {
	// TODO Auto-generated destructor stub
}

void SRF01::SRF01_Cmd(byte Address, byte cmd){               // Function to send commands to the SRF01
  pinMode(SRF_TXRX, OUTPUT);
  digitalWrite(SRF_TXRX, LOW);                        // Send a 2ms break to begin communications with the SRF01
  delay(2);
  digitalWrite(SRF_TXRX, HIGH);
  delay(1);
  srf01->write(Address);                               // Send the address of the SRF01
  srf01->write(cmd);                                   // Send commnd byte to SRF01
  pinMode(SRF_TXRX, INPUT);
  int availbleJunk = srf01->available();               // As RX and TX are the same pin it will have recieved the data we just sent out, as we dont want this we read it back and ignore it as junk before waiting for useful data to arrive
  for(int x = 0;  x < availbleJunk; x++) byte junk = srf01->read();
}

