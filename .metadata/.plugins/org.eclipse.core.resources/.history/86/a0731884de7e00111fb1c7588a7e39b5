/*
 * PID.cpp
 *
 *  Created on: Apr 4, 2012
 *      Author: imaveek
 */

#include "PID.h"

PID::PID() {
	// TODO Auto-generated constructor stub
	pre_error=0;
	integral=0;
	error=0;
	derivative=0;

	epsilon = 500;
	dt = 0.01;        //100ms loop time
	MAX = 100;
	MIN = 0;
	Kp = 0.3;
	Kd = 0;
	Ki = 0;
}

PID::PID(float epsilon, float dt. float MAX, float MIN, float Kp, float Ki, float Kd) {

}

float PID::loop(float setpoint, float actual_position) {

	float output=0;

	//Calculate P,I,D
	error = setpoint - actual_position;

	//In case of error too small then stop integration
	if(abs(error) > epsilon)
	{
		integral = integral + error*dt;
	}
	derivative = (error - pre_error)/dt;
	output = Kp*error + Ki*integral + Kd*derivative;

	//Saturation Filter
	if(output > MAX)
	{
		output = MAX;
	}
	else if(output < MIN)
	{
		output = MIN;
	}

	//Update error
	pre_error = error;

	return output;
}

PID::~PID() {
	// TODO Auto-generated destructor stub
}

